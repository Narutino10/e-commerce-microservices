stages:
  - build
  - test
  - deploy
  - deploy_staging

# Étape 1 : Build
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
    - echo "Building the application..."
    - docker-compose -f docker-compose.yml build
  only:
    - develop

# Étape 2 : Tests
test:
  stage: test
  image: node:16
  script:
    - echo "Running tests..."
    - cd frontend
    - npm install
    - npm run test
  only:
    - develop

# Étape 3 : Déploiement
deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H <server_ip_or_hostname> >> ~/.ssh/known_hosts
  script:
    - scp ./docker-compose.prod.yml user@<server_ip_or_hostname>:/tmp/docker-compose.prod.yml
    - ssh -i ~/.ssh/id_rsa user@<server_ip_or_hostname> "docker stack deploy -c /tmp/docker-compose.prod.yml ecommerce_stack"
  only:
    - main





deploy_staging:
  stage: deploy
  image: docker:latest
  script:
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa user@staging-server "docker stack deploy -c /path/to/docker-compose.staging.yml ecommerce_stack"
  only:
    - staging
